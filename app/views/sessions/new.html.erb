
<div class="row" style="height:200px"></div>

<div class="row">

  <div class="col-md-4">
  </div>

  <div class="col-md-4">
    <h1>Sign In
      <br>
      <small> 
        <a href="/users/new">
          Or sign up here
        </a> 
      </small>
    </h1>

    <form action="/session" method="post">
      <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">

      <label for="username">Username</label><br>
      <input id="username" name="user[username]" type="text"><br>

      <label for="password">Password</label><br>
      <input id="password" name="user[password]" type="password"><br>
      <br>
      <input type="submit" class="btn btn-primary" value="Submit"><br>
    </form>

    <br>

    <form action="/session" method="post">
      <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
      <input type="hidden" name="user[username]" value="human">
      <input type="hidden" name="user[password]" value="password">
      <input type="submit" id="guest-sign-in" class="btn btn-primary" value="Log in as guest">
    </form>
  </div>
</div>

<canvas id="canvas"></canvas>

<script>
  if (typeof Circles === "undefined") {
    window.Circles = {};
  }

  var Circle = Circles.Circle = function (centerX, centerY, radius, color, dx, dy) {
    this.centerX = centerX;
    this.centerY = centerY;
    this.radius = radius;
    this.color = color;
    this.dx = dx;
    this.dy = dy;
  };


  Circle.randomCircle = function (maxX, maxY, numCircles) {
    return new Circle(
      maxX * Math.random(),
      maxY * Math.random(),
      Circle.radius(maxX, maxY, numCircles),
      Circle.randomColor(),
      Math.random()*0.2,
      Math.random()*0.2
    );
  };

  Circle.randomColor = function () {
    var colorsBright = ["#B9EC47", "#3EC0B7", "#F7B15E", "#FF82C3", "#3EC0B7", "#907A9D"];
    var colorsMuted = ["#AEA8D3", "#674172", "#1BA39C"];
    var colors = colorsMuted
    return colors[Math.floor((Math.random() * colors.length))];
  };

  Circle.radius = function (maxX, maxY, numCircles) {
    var targetCircleArea = (maxX * maxY) / 4000;
    var targetRadius = 2*Math.random()*Math.sqrt(targetCircleArea / Math.PI)+0.1;
    return 2 * targetRadius;
  };

  Circle.prototype.move = function (maxX, maxY) {
    var dx = this.dx;
    var dy = this.dy;

    this.centerX = Math.abs((this.centerX + (dx * this.radius * 0.1)) % maxX);
    this.centerY = Math.abs((this.centerY + (dy * this.radius) * 0.1) % maxY);
  };

  Circle.prototype.render = function (ctx) {
    ctx.fillStyle = this.color;
    ctx.beginPath();
    ctx.lineWidth=5;
    ctx.arc(
      this.centerX,
      this.centerY,
      this.radius,
      0,
      2 * Math.PI,
      false
    );

    ctx.fill();
  };

  if (typeof Lines === "undefined") {
    window.Lines = {};
  }

  var Line = Circles.Line = function (x1, y1, x2, y2, color, dx1, dy1, dx2, dy2) {
    this.x1 = x1;
    this.y1 = y1;
    this.x2 = x2;
    this.y2 = y2;
    this.color = color
    this.dx1 = dx1;
    this.dy1 = dy1;
    this.dx2 = dx2;
    this.dy2 = dy2;
    this.thickness = Math.random()*5+1
  };


  Line.randomLine = function (maxX, maxY) {
    var x1;
    var x2;
    var y1;
    var y2;
    var dx1;
    var dx2;
    var dy1;
    var dy2;
    if (Math.random() < 0.5){
      x1 = Math.random() < 0.5 ? 0 : maxX;
      y1 = Math.random()*maxY;
      dy1 = Math.random()*0.1
      dx1 = 0
    } else {
      y1 = Math.random() < 0.5 ? 0 : maxY;
      x1 = Math.random()*maxX;
      dx1 = Math.random()*0.1
      dy2 = 0
    }

    if (Math.random() < 0.5){
      x2 = Math.random() < 0.5 ? 0 : maxX;
      y2 = Math.random()*maxY;
      dy2 = Math.random()*0.5
      dx2 = 0
    } else {
      y2 = Math.random() < 0.5 ? 0 : maxY;
      x2 = Math.random()*maxX;
      dx2 = Math.random()*0.5
      dy2 = 0
    }

    return new Line(
      x1, y1, x2, y2,
      Circle.randomColor(),
      dx1, dy1, dx2, dy2
    );
  };

  Line.prototype.move = function (maxX, maxY) {
    var dx = this.dx;
    var dy = this.dy;

    this.x1 = this.x1 + this.dx1;
    this.x2 = this.x2 + this.dx2;
    this.y1 = this.y1 + this.dy1;
    this.y2 = this.y2 + this.dy2;
  };

  Line.prototype.render = function (ctx) {
    ctx.strokeStyle= this.color;
    ctx.lineWidth= this.thickness;
    ctx.beginPath();

    ctx.beginPath();
    ctx.moveTo(this.x1,this.y1);
    ctx.lineTo(this.x2,this.y2);
    ctx.stroke();
  };

  Circle.randomColor = function () {
    var colorsBright = ["#B9EC47", "#3EC0B7", "#F7B15E", "#FF82C3", "#3EC0B7", "#907A9D"];
    var colorsMuted = ["#AEA8D3", "#674172", "#1BA39C"];
    var colors = colorsMuted
    return colors[Math.floor((Math.random() * colors.length))];
  };



  var Game = Circles.Game = function (xDim, yDim) {
    this.xDim = xDim;
    this.yDim = yDim;

    this.circles = [];
    for (var i = 0; i < Game.NUM_CIRCLES; ++i) {
      this.circles.push(
        Circles.Circle.randomCircle(xDim, yDim, Game.NUM_CIRCLES)
      );
    }

    this.lines = [];
    for (var i = 0; i < 20; ++i) {
      this.lines.push(
        Circles.Line.randomLine(xDim, yDim)
      );
    }
  };

  Game.NUM_CIRCLES = 40;

  Game.prototype.render = function (ctx) {
    ctx.clearRect(0, 0, this.xDim, this.yDim);
    

    this.circles.forEach(function (circle) {
      circle.render(ctx);
    });

    this.lines.forEach(function (line) {
      line.render(ctx);
    });
  };

  Game.prototype.moveLines = function () {
    var game = this;
    this.lines.forEach(function (line) {
      line.move(game.xDim, game.yDim);
    });

  };


  Game.prototype.moveCircles = function () {
    var game = this;
    this.circles.forEach(function (circle) {
      circle.move(game.xDim, game.yDim);
    });

  };

  Game.prototype.start = function (canvasEl) {
    // get a 2d canvas drawing context. The canvas API lets us call
    // a `getContext` method on a canvas DOM element.
    var ctx = canvasEl.getContext("2d");

    // render at 60 FPS
    window.setInterval((function () {
      this.moveCircles();
      this.moveLines();
      this.render(ctx);
    }).bind(this), 1000 / 60);
  };
</script>


<script>
      var canvasEl = document.getElementsByTagName("canvas")[0];
      canvasEl.height = window.innerHeight;
      canvasEl.width = window.innerWidth;
      new Circles.Game(
        canvasEl.width,
        canvasEl.height
      ).start(canvasEl);
    </script>